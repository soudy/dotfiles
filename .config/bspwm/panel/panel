#! /bin/sh
export PANEL_FIFO=/tmp/panel-fifo
export PANEL_HEIGHT=24
#export PANEL_FONT_FAMILY="-*-uushi-medium-r-*--*-90-*-*-*-*-*-*"
# export PANEL_FONT_FAMILY1="Termsyn:pixelsize=10:antialias=false:hinting=false,Termsyn.icons:size=8"
#export PANEL_FONT_FAMILY1="Termsyn:size=8"
export PANEL_FONT_FAMILY1="Pragmata Pro:size=9:antialias=false:hinting=false"
export PANEL_FONT_FAMILY2="-*-stlarch-*-*-*-*-11-*-*-*-*-*-*-*"
# export PANEL_FONT_FAMILY2="stlarch"
export PANEL_FIFO PANEL_HEIGHT PANEL_FONT_FAMILY
export PATH=$PATH:~/.config/bspwm/panel/

cd ~/.config/bspwm/panel/

tray_clock() {
	#clock -sf 'S⭧ %a %I: %M'
	while :; do
		./clock.sh
		#echo "⯇ ⯆ ⯈ ⮾ ⮿"
		sleep 5
	done
}

# tray_music() {
# 	#clock -sf 'S⭧ %a %I: %M'
# 	./music.sh
# }


#######3
MUSIC_SCROLLER=""
LAST_MPC_SONG=""
LAST_MPC_STATE=""
tray_music() {
    mpc_state=$(mpc status | awk 'NR==2 {print $1}')
	# mpc_state=$(playerctl status 2>/dev/null)
	#playerctl metadata title
    mpc_song=$(mpc current)
	# mpc_song="$(playerctl metadata artist 2>/dev/null) - $(playerctl metadata title 2>/dev/null)"
	icon_phones='⮜'
	headphones=$(cat ~/.phones)

	if [ $headphones -eq 1 ]; then
		phones=" "$icon_phones
	else
		phones=""
	fi

	# kill old zscroll so not scrolling over new text
	if [[ $mpc_song != "$LAST_MPC_SONG" ]] || [[ $mpc_state != "$LAST_MPC_STATE" ]]; then
		if [[ -n $MUSIC_SCROLLER ]]; then
			kill $MUSIC_SCROLLER
			MUSIC_SCROLLER=""
		fi
	fi

	if [[ -n $mpc_song ]]; then
		# if going to be scrolled, add " - " separator
		if [[ ${#mpc_song} -gt 40 ]]; then
			mpc_display="$mpc_song -"
		else
			mpc_display=$mpc_song
		fi

		if [[ $mpc_state == "[paused]" ]]; then
			# don't scroll if paused
			echo "H%{F#FF66AABB}%{F-} mpd paused" > "$PANEL_FIFO"
		else
			# update scroller on song change or state change (e.g. paused to unpaused)
			if [[ $mpc_song != "$LAST_MPC_SONG" ]] || [[ $mpc_state != "$LAST_MPC_STATE" ]]; then
				# will only scroll if greater than 40, otherwise will just print in place
				zscroll -n -b "H%{F#FF66AABB}%{F-} " "$mpc_display" > "$PANEL_FIFO" &
				MUSIC_SCROLLER=$!
			fi
		fi
	else
		# nothing playing/paused
		echo "H%{F#FF66AABB}%{F-} -" > "$PANEL_FIFO"
	fi
	# save
	LAST_MPC_SONG=$mpc_song
	LAST_MPC_STATE=$mpc_state
}

tray_cpu() {
    while :; do
        temp=$(acpi -t | awk '{print $4}')
        echo "C   $temp"
        sleep .25
    done
}

tray_weather() {
	while :; do
		#./weather.sh
		sleep 1
	done
}

tray_vol() {
	#echo "Vvol"
	#./volume.sh
	while :; do
		./volume.sh
		sleep .25
	done
}

tray_icon() {
	#echo "Vvol"
	#./volume.sh
	echo "I %{F#FFD23D3D}%{F-}"
}

tray_batt() {
    #echo "B"$(acpi -a | if grep -q "on-line"; then echo -n "FULL?"; else echo -n " ⭫ " " $(chg)%"; fi)
    #./battery.sh
    while :; do
		./battery.sh
		sleep 3
	done
}

tray_net() {
	while :; do
		./network.sh
		sleep 3
	done
}

tray_kern() {
	kernver=$(uname -r)
	echo "K %{F#FFD23D3D} %{F-}""$kernver "
}

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &
#xtitle -sf 'T%s' > "$PANEL_FIFO" &

while true; do
	# scrolling song info (on left)
	tray_music
	headphones=$(cat ~/.phones)[]
	sleep 1
done &

tray_vol > "$PANEL_FIFO" &
tray_cpu > "$PANEL_FIFO" &
tray_batt > "$PANEL_FIFO" &
tray_clock > "$PANEL_FIFO" &
tray_kern > "$PANEL_FIFO" &
tray_net > "$PANEL_FIFO" &

. panel_colors

cat "$PANEL_FIFO" | panel_bar | lemonbar -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY1" -f "$PANEL_FONT_FAMILY2" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" | panel_clean | sh &

wait
